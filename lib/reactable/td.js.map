{"version":3,"sources":["../../src/reactable/td.jsx"],"names":["Td","object","toString","mergedProps","props","column","key","onClick","handleClick","stringifiedChildProps","data","stringifyIfNotReactComponent","children","__html","React","Component"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;IAEqBA,E;;;;;;;;;;;qDACYC,M,EAAQ;AACnC,gBAAG,CAAC,0CAAiBA,MAAjB,CAAD,IAA6B,4BAAWA,MAAX,CAA7B,IAAmD,OAAOA,MAAP,KAAmB,WAAzE,EAAsF;AACpF,uBAAOA,OAAOC,QAAP,EAAP;AACD;AACD,mBAAO,IAAP;AACD;;;iCAEQ;AACL;AACA,gBAAIC,cAAc,wCAAgB,KAAKC,KAArB,CAAlB;AACA,gBAAI,QAAO,KAAKA,KAAL,CAAWC,MAAlB,MAA8B,QAAlC,EAA4C;AACxC,qBAAK,IAAIC,GAAT,IAAgB,KAAKF,KAAL,CAAWC,MAA3B,EAAmC;AAC/B,wBAAIC,QAAQ,KAAR,IAAiBA,QAAQ,MAA7B,EAAqC;AACjCH,oCAAYG,GAAZ,IAAmB,KAAKF,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAnB;AACH;AACJ;AACJ;AACD;AACAH,wBAAYI,OAAZ,GAAsB,KAAKH,KAAL,CAAWI,WAAjC;;AAEA,gBAAIC,qBAAJ;;AAEA,gBAAI,OAAO,KAAKL,KAAL,CAAWM,IAAlB,KAA4B,WAAhC,EAA6C;AAC3CD,wCAAwB,KAAKE,4BAAL,CAAkC,KAAKP,KAAL,CAAWQ,QAA7C,CAAxB;AACD;;AAED,gBAAI,sBAAS,KAAKR,KAAL,CAAWQ,QAApB,CAAJ,EAAmC;AAC/B,uBAAO,iDAAQT,WAAR;AACH,6CAAyB,EAACU,QAAQ,KAAKT,KAAL,CAAWQ,QAAX,CAAoBV,QAApB,EAAT,EADtB,IAAP;AAEH,aAHD,MAGO;AACL,uBAAO;AAAA;AAAQC,+BAAR;AACAM,6CAAyB,KAAKL,KAAL,CAAWQ;AADpC,iBAAP;AAGD;AACJ;;;;EAnC2BE,gBAAMC,S;;kBAAjBf,E;AAoCpB","file":"td.js","sourceRoot":"src","sourcesContent":["import React from 'react';\nimport { isReactComponent } from './lib/is_react_component';\nimport { stringable } from './lib/stringable';\nimport { isUnsafe } from './unsafe';\nimport { filterPropsFrom } from './lib/filter_props_from';\n\nexport default class Td extends React.Component {\n    stringifyIfNotReactComponent(object) {\n      if(!isReactComponent(object) && stringable(object) && typeof(object) !== 'undefined') {\n        return object.toString()\n      }\n      return null;\n    }\n\n    render() {\n        // Attach any properties on the column to this Td object to allow things like custom event handlers\n        var mergedProps = filterPropsFrom(this.props);\n        if (typeof(this.props.column) === 'object') {\n            for (var key in this.props.column) {\n                if (key !== 'key' && key !== 'name') {\n                    mergedProps[key] = this.props.column[key];\n                }\n            }\n        }\n        // handleClick aliases onClick event\n        mergedProps.onClick = this.props.handleClick;\n\n        var stringifiedChildProps;\n\n        if (typeof(this.props.data) === 'undefined') {\n          stringifiedChildProps = this.stringifyIfNotReactComponent(this.props.children)\n        }\n\n        if (isUnsafe(this.props.children)) {\n            return <td {...mergedProps}\n                dangerouslySetInnerHTML={{__html: this.props.children.toString()}}/>\n        } else {\n          return <td {...mergedProps}>\n                {stringifiedChildProps || this.props.children}\n            </td>;\n        }\n    }\n};\n"]}