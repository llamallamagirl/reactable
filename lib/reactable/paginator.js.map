{"version":3,"sources":["../../src/reactable/paginator.jsx"],"names":["pageHref","num","Paginator","e","preventDefault","props","onPageChange","currentPage","page","handlePrevious","bind","previousPageLabel","numPages","handleNext","nextPageLabel","className","pageNum","handlePageButton","colSpan","TypeError","pageButtons","pageButtonLimit","lowerHalf","Math","round","upperHalf","i","showPageButton","push","renderPageButton","splice","length","renderPrevious","renderNext","React","Component"],"mappings":"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","file":"paginator.js","sourceRoot":"src","sourcesContent":["import React from 'react';\n\nfunction pageHref(num) {\n    return `#page-${num + 1}`\n}\n\nexport default class Paginator extends React.Component {\n    handlePrevious(e) {\n        e.preventDefault()\n        this.props.onPageChange(this.props.currentPage - 1)\n    }\n\n    handleNext(e) {\n        e.preventDefault()\n        this.props.onPageChange(this.props.currentPage + 1);\n    }\n\n    handlePageButton(page, e) {\n        e.preventDefault();\n        this.props.onPageChange(page);\n    }\n\n    renderPrevious() {\n        if(this.props.currentPage > 0) {\n            return <a className='reactable-previous-page'\n                      href={pageHref(this.props.currentPage - 1)}\n                      onClick={this.handlePrevious.bind(this)}>\n                        {this.props.previousPageLabel || 'Previous'}\n                   </a>\n        }\n    }\n\n    renderNext() {\n        if(this.props.currentPage < this.props.numPages - 1) {\n            return <a className='reactable-next-page'\n                      href={pageHref(this.props.currentPage + 1)}\n                      onClick={this.handleNext.bind(this)}>\n                      {this.props.nextPageLabel || 'Next'}\n                   </a>\n        }\n    }\n\n    renderPageButton(className, pageNum) {\n\n        return <a className={className}\n                  key={pageNum}\n                  href={pageHref(pageNum)}\n                  onClick={this.handlePageButton.bind(this, pageNum)}>\n                  {pageNum + 1}\n              </a>\n    }\n\n    render() {\n        if (typeof this.props.colSpan === 'undefined') {\n            throw new TypeError('Must pass a colSpan argument to Paginator');\n        }\n\n        if (typeof this.props.numPages === 'undefined') {\n            throw new TypeError('Must pass a non-zero numPages argument to Paginator');\n        }\n\n        if (typeof this.props.currentPage === 'undefined') {\n            throw new TypeError('Must pass a currentPage argument to Paginator');\n        }\n\n        let pageButtons = [];\n        let pageButtonLimit = this.props.pageButtonLimit;\n        let currentPage = this.props.currentPage;\n        let numPages = this.props.numPages;\n        let lowerHalf = Math.round( pageButtonLimit / 2 );\n        let upperHalf = (pageButtonLimit - lowerHalf);\n\n        for (let i = 0; i < this.props.numPages; i++) {\n            let showPageButton = false;\n            let pageNum = i;\n            let className = \"reactable-page-button\";\n            if (currentPage === i) {\n                className += \" reactable-current-page\";\n            }\n            pageButtons.push( this.renderPageButton(className, pageNum));\n        }\n\n        if(currentPage - pageButtonLimit + lowerHalf > 0) {\n            if(currentPage > numPages - lowerHalf) {\n                pageButtons.splice(0, numPages - pageButtonLimit)\n            } else {\n                pageButtons.splice(0, currentPage - pageButtonLimit + lowerHalf);\n            }\n        }\n\n        if((numPages - currentPage) > upperHalf) {\n            pageButtons.splice(pageButtonLimit, pageButtons.length - pageButtonLimit);\n        }\n\n        return (\n            <tbody className=\"reactable-pagination\">\n                <tr>\n                    <td colSpan={this.props.colSpan}>\n                        {this.renderPrevious()}\n                        {pageButtons}\n                        {this.renderNext()}\n                    </td>\n                </tr>\n            </tbody>\n        );\n    }\n};\n\n"]}