{"version":3,"sources":["../../src/reactable/thead.jsx"],"names":["Thead","column","props","onSort","key","event","keyCode","Ths","index","columns","length","thClass","replace","toLowerCase","sortClass","thRole","sortableColumns","sort","direction","className","push","handleClickTh","bind","handleKeyDownTh","label","filtering","onFilter","filterPlaceholder","currentFilter","filterClassName","component","React","Children","forEach","children","th","TypeError","Component"],"mappings":"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","file":"thead.js","sourceRoot":"src","sourcesContent":["import React from 'react';\nimport { Th } from './th';\nimport { Filterer } from './filterer';\nimport { filterPropsFrom } from './lib/filter_props_from';\n\nexport class Thead extends React.Component {\n    static getColumns(component) {\n        // Can't use React.Children.map since that doesn't return a proper array\n        let columns = [];\n        React.Children.forEach(component.props.children, th => {\n            var column = {};\n            if (!th) return;\n            if (typeof th.props !== 'undefined') {\n                column.props = filterPropsFrom(th.props);\n\n                // use the content as the label & key\n                if (typeof th.props.children !== 'undefined') {\n                    column.label = th.props.children;\n                    column.key = column.label;\n                }\n\n                // the key in the column attribute supersedes the one defined previously\n                if (typeof th.props.column === 'string') {\n                    column.key = th.props.column;\n\n                    // in case we don't have a label yet\n                    if (typeof column.label === 'undefined') {\n                        column.label = column.key;\n                    }\n                }\n            }\n\n            if (typeof column.key === 'undefined') {\n                throw new TypeError(\n                    '<th> must have either a \"column\" property or a string ' +\n                    'child');\n            } else {\n                columns.push(column);\n            }\n        });\n\n        return columns;\n    }\n\n    handleClickTh(column) {\n        this.props.onSort(column.key);\n    }\n\n    handleKeyDownTh(column, event) {\n      if (event.keyCode === 13) {\n        this.props.onSort(column.key);\n      }\n    }\n\n    render() {\n        // Declare the list of Ths\n        var Ths = [];\n        for (var index = 0; index < this.props.columns.length; index++) {\n            var column = this.props.columns[index];\n            var thClass = `reactable-th-${column.key.replace(/\\s+/g, '-').toLowerCase()}`;\n            var sortClass = '';\n            var thRole = null;\n\n            if (this.props.sortableColumns[column.key]) {\n                sortClass += 'reactable-header-sortable ';\n                thRole = 'button';\n            }\n\n            if (this.props.sort.column === column.key) {\n                sortClass += 'reactable-header-sort';\n                if (this.props.sort.direction === 1) {\n                    sortClass += '-asc';\n                }\n                else {\n                    sortClass += '-desc';\n                }\n            }\n\n            if (sortClass.length > 0) {\n              thClass += ` ${sortClass}`;\n            }\n\n            if (\n                typeof(column.props) === 'object' &&\n                typeof(column.props.className) === 'string'\n            ) {\n                thClass += ` ${column.props.className}`;\n            }\n\n            Ths.push(\n                <Th {...column.props}\n                    className={thClass}\n                    key={index}\n                    onClick={this.handleClickTh.bind(this, column)}\n                    onKeyDown={this.handleKeyDownTh.bind(this, column)}\n                    role={thRole}\n                    tabIndex=\"0\">\n                    {column.label}\n                </Th>\n            );\n        }\n\n        // Manually transfer props\n        var props = filterPropsFrom(this.props);\n\n        return (\n            <thead {...props}>\n                {this.props.filtering === true ?\n                    <Filterer\n                        colSpan={this.props.columns.length}\n                        onFilter={this.props.onFilter}\n                        placeholder={this.props.filterPlaceholder}\n                        value={this.props.currentFilter}\n                        className={this.props.filterClassName}\n                    /> : null}\n                <tr className=\"reactable-column-header\">{Ths}</tr>\n            </thead>\n        );\n    }\n};\n"]}