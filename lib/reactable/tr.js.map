{"version":3,"sources":["../../src/reactable/tr.jsx"],"names":["Tr","children","React","Children","props","data","columns","map","concat","i","column","hasOwnProperty","key","value","__reactableMeta","bind","DOM","tr","Component","childNode","Td","dataType"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;;;;;;;IAEaA,E,WAAAA,E;;;;;;;;;;;iCACA;AACL,gBAAIC,WAAW,uBAAQC,gBAAMC,QAAN,CAAeF,QAAf,CAAwB,KAAKG,KAAL,CAAWH,QAAnC,CAAR,CAAf;;AAEA,gBACI,KAAKG,KAAL,CAAWC,IAAX,IACI,KAAKD,KAAL,CAAWE,OADf,IAEQ,OAAO,KAAKF,KAAL,CAAWE,OAAX,CAAmBC,GAA1B,KAAkC,UAH9C,EAIE;AACEN,2BAAWA,SAASO,MAAT,CAAgB,KAAKJ,KAAL,CAAWE,OAAX,CAAmBC,GAAnB,CAAuB,gBAAmCE,CAAnC,EAAsC;AAAA,0CAA3BL,KAA2B;AAAA,wBAA3BA,KAA2B,8BAAnB,EAAmB;AAAA,wBAAZM,MAAY;;AACpF,wBAAI,KAAKN,KAAL,CAAWC,IAAX,CAAgBM,cAAhB,CAA+BD,OAAOE,GAAtC,CAAJ,EAAgD;AAC5C,4BAAIC,QAAQ,KAAKT,KAAL,CAAWC,IAAX,CAAgBK,OAAOE,GAAvB,CAAZ;;AAEA,4BACI,OAAOC,KAAP,KAAkB,WAAlB,IACIA,UAAU,IADd,IAEQA,MAAMC,eAAN,KAA0B,IAHtC,EAIE;AACEV,oCAAQS,MAAMT,KAAd;AACAS,oCAAQA,MAAMA,KAAd;AACH;;AAED,+BAAO;AAAC,kCAAD;AAAA,uCAAI,QAAQH,MAAZ,EAAoB,KAAKA,OAAOE,GAAhC,IAAyCR,KAAzC;AAAiDS;AAAjD,yBAAP;AACH;AACJ,iBAfiD,CAehDE,IAfgD,CAe3C,IAf2C,CAAvB,CAAhB,CAAX;AAgBH;;AAED;AACA,gBAAIX,QAAQ,wCAAgB,KAAKA,KAArB,CAAZ;;AAEA,mBAAOY,4BAAIC,EAAJ,CAAOb,KAAP,EAAcH,QAAd,CAAP;AACH;;;;EA/BmBC,gBAAMgB,S;;AAgC7B;;AAEDlB,GAAGmB,SAAH,GAAeC,MAAf;AACApB,GAAGqB,QAAH,GAAc,QAAd","file":"tr.js","sourceRoot":"src","sourcesContent":["import React from 'react';\nimport DOM from 'react-dom-factories';\nimport { Td } from './td';\nimport { toArray } from './lib/to_array';\nimport { filterPropsFrom } from './lib/filter_props_from';\n\nexport class Tr extends React.Component {\n    render() {\n        var children = toArray(React.Children.children(this.props.children));\n\n        if (\n            this.props.data &&\n                this.props.columns &&\n                    typeof this.props.columns.map === 'function'\n        ) {\n            children = children.concat(this.props.columns.map(function({ props = {}, ...column}, i) {\n                if (this.props.data.hasOwnProperty(column.key)) {\n                    var value = this.props.data[column.key];\n\n                    if (\n                        typeof(value) !== 'undefined' &&\n                            value !== null &&\n                                value.__reactableMeta === true\n                    ) {\n                        props = value.props;\n                        value = value.value;\n                    }\n\n                    return <Td column={column} key={column.key} {...props}>{value}</Td>;\n                }\n            }.bind(this)));\n        }\n\n        // Manually transfer props\n        var props = filterPropsFrom(this.props);\n\n        return DOM.tr(props, children);\n    }\n};\n\nTr.childNode = Td;\nTr.dataType = 'object';\n\n"]}