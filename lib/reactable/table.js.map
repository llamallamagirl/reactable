{"version":3,"sources":["../../src/reactable/table.jsx"],"names":["Table","props","state","currentPage","currentSort","column","direction","defaultSortDescending","filter","sortBy","defaultSort","sortingColumn","getCurrentSort","setState","columns","map","i","key","label","sortable","sortFunction","_sortable","bind","data","tfoot","children","React","Children","child","Tfoot","Thead","Tr","indexOf","type","_context","render","forEach","console","warn","childData","descendant","log","value","__reactableMeta","push","parseChildData","concat","initializeSorts","initializeFilters","_filterable","filterable","columnName","filterFunction","Object","sortDirection","defaultDirection","nextPage","initialize","sortByCurrentSort","filterBy","nextProps","updateCurrentPage","updateCurrentSort","toLowerCase","matchedChildren","length","filterColumn","toString","sort","a","b","keyA","keyB","onSort","userColumnsSpecified","showHeaders","hideTableHeader","firstChild","getColumns","translateColumnsArray","rawData","k","hasOwnProperty","find","element","undefined","filtering","Array","isArray","hideFilterInput","filteredChildren","applyFilter","itemsPerPage","pagination","numPages","pageButtonLimit","currentChildren","Math","ceil","slice","noDataText","tableHeader","onFilter","filterPlaceholder","filterClassName","page","onPageChange","previousPageLabel","nextPageLabel","Component","defaultProps"],"mappings":"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","file":"table.js","sourceRoot":"src","sourcesContent":["import React from 'react';\nimport { filterPropsFrom } from './lib/filter_props_from';\nimport { extractDataFrom } from './lib/extract_data_from';\nimport { isUnsafe } from './unsafe';\nimport { Thead } from './thead';\nimport { Th } from './th';\nimport { Tr } from './tr';\nimport { Tfoot } from './tfoot';\nimport { Paginator } from './paginator';\n\nexport class Table extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentPage: this.props.currentPage ? this.props.currentPage : 0,\n            currentSort: {\n                column: null,\n                direction: this.props.defaultSortDescending ? -1 : 1\n            },\n            filter: ''\n        };\n\n        // Set the state of the current sort to the default sort\n        if (props.sortBy !== false || props.defaultSort !== false) {\n            let sortingColumn = props.sortBy || props.defaultSort;\n            this.state.currentSort = this.getCurrentSort(sortingColumn);\n        }\n    }\n\n    filterBy(filter) {\n        this.setState({ filter: filter });\n    }\n\n    // Translate a user defined column array to hold column objects if strings are specified\n    // (e.g. ['column1'] => [{key: 'column1', label: 'column1'}])\n    translateColumnsArray(columns) {\n        return columns.map(function(column, i) {\n            if (typeof(column) === 'string') {\n                return {\n                    key:   column,\n                    label: column\n                };\n            } else {\n                if (typeof(column.sortable) !== 'undefined') {\n                    let sortFunction = column.sortable === true ? 'default' : column.sortable;\n                    this._sortable[column.key] = sortFunction;\n                }\n\n                return column;\n            }\n        }.bind(this));\n    }\n\n    parseChildData(props) {\n        let data = [], tfoot;\n\n        const children = React.Children.map(props.children, function(child) {\n            if (typeof(child) === 'undefined' || child === null) { return; }\n            if ([Tfoot, Thead, Tr].indexOf(child.type) >= 0) {\n                return child\n            } else {\n                return (new child.type(child.props, child._context)).render()\n            }\n        });\n\n        React.Children.forEach(children, function(child) {\n            switch (child.type) {\n                case Tfoot:\n                    if (typeof(tfoot) !== 'undefined') {\n                        console.warn ('You can only have one <Tfoot>, but more than one was specified.' +\n                                      'Ignoring all but the last one');\n                    }\n                    tfoot = child;\n                break;\n                case Tr:\n                    let childData = child.props.data || {};\n\n                    React.Children.forEach(child.props.children, function(descendant) {\n                        console.log(descendant);\n                        if (\n                            typeof(descendant) !== 'object' ||\n                            descendant == null\n                        ) {\n                            return;\n                        } else if (typeof(descendant.props.column) !== 'undefined') {\n                            let value;\n\n                            if (typeof(descendant.props.data) !== 'undefined') {\n                                value = descendant.props.data;\n                            } else if (typeof(descendant.props.children) !== 'undefined') {\n                                value = descendant.props.children;\n                            } else {\n                                console.warn('Td specified without ' +\n                                             'a `data` property or children, ' +\n                                             'ignoring');\n                                return;\n                            }\n\n                            childData[descendant.props.column] = {\n                                value: value,\n                                props: filterPropsFrom(descendant.props),\n                                __reactableMeta: true\n                            };\n                        } else {\n                            console.warn('exports.Td specified without a `column` property, ignoring');\n                        }\n                    });\n\n                    data.push({\n                        data: childData,\n                        props: filterPropsFrom(child.props),\n                        __reactableMeta: true\n                    });\n                break;\n\n                default: break;\n            }\n        }.bind(this));\n\n        return { data, tfoot };\n    }\n\n    initialize(props) {\n        this.data = props.data || [];\n        let { data, tfoot } = this.parseChildData(props);\n\n        this.data = this.data.concat(data);\n        this.tfoot = tfoot;\n\n        this.initializeSorts(props);\n        this.initializeFilters(props);\n    }\n\n    initializeFilters(props) {\n        this._filterable = {};\n        // Transform filterable properties into a more friendly list\n        for (let i in props.filterable) {\n            let column = props.filterable[i];\n            let columnName, filterFunction;\n\n            if (column instanceof Object) {\n                if (typeof(column.column) !== 'undefined') {\n                    columnName = column.column;\n                } else {\n                    console.warn('Filterable column specified without column name');\n                    continue;\n                }\n\n                if (typeof(column.filterFunction) === 'function') {\n                    filterFunction = column.filterFunction;\n                } else {\n                    filterFunction = 'default';\n                }\n            } else {\n                columnName = column;\n                filterFunction = 'default';\n            }\n\n            this._filterable[columnName] = filterFunction;\n        }\n    }\n\n    initializeSorts(props) {\n        this._sortable = {};\n        // Transform sortable properties into a more friendly list\n        for (let i in props.sortable) {\n            let column = props.sortable[i];\n            let columnName, sortFunction;\n\n            if (column instanceof Object) {\n                if (typeof(column.column) !== 'undefined') {\n                    columnName = column.column;\n                } else {\n                    console.warn('Sortable column specified without column name');\n                    return;\n                }\n\n                if (typeof(column.sortFunction) === 'function') {\n                    sortFunction = column.sortFunction;\n                } else {\n                    sortFunction = 'default';\n                }\n            } else {\n                columnName      = column;\n                sortFunction    = 'default';\n            }\n\n            this._sortable[columnName] = sortFunction;\n        }\n    }\n\n    getCurrentSort(column) {\n        let columnName, sortDirection;\n\n        if (column instanceof Object) {\n            if (typeof(column.column) !== 'undefined') {\n                columnName = column.column;\n            } else {\n                console.warn('Default column specified without column name');\n                return;\n            }\n\n            if (typeof(column.direction) !== 'undefined') {\n                if (column.direction === 1 || column.direction === 'asc') {\n                    sortDirection = 1;\n                } else if (column.direction === -1 || column.direction === 'desc') {\n                    sortDirection = -1;\n                } else {\n                    let defaultDirection = this.props.defaultSortDescending ? 'descending' : 'ascending';\n\n                    console.warn('Invalid default sort specified. Defaulting to ' + defaultDirection );\n                    sortDirection = this.props.defaultSortDescending ? -1 : 1;\n                }\n            } else {\n                sortDirection = this.props.defaultSortDescending ? -1 : 1;\n            }\n        } else {\n            columnName      = column;\n            sortDirection   = this.props.defaultSortDescending ? -1 : 1;\n        }\n\n        return {\n            column: columnName,\n            direction: sortDirection\n        };\n    }\n\n    updateCurrentSort(sortBy) {\n        if (sortBy !== false &&\n            sortBy.column !== this.state.currentSort.column &&\n                sortBy.direction !== this.state.currentSort.direction) {\n\n            this.setState({ currentSort: this.getCurrentSort(sortBy) });\n        }\n    }\n\n    updateCurrentPage(nextPage) {\n        if (typeof(nextPage) !== 'undefined' && nextPage !== this.state.currentPage) {\n            this.setState({ currentPage: nextPage});\n        }\n    }\n\n    componentWillMount() {\n        this.initialize(this.props);\n        this.sortByCurrentSort();\n        this.filterBy(this.props.filterBy);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.initialize(nextProps);\n        this.updateCurrentPage(nextProps.currentPage)\n        this.updateCurrentSort(nextProps.sortBy);\n        this.sortByCurrentSort();\n        this.filterBy(nextProps.filterBy);\n    }\n\n    applyFilter(filter, children) {\n        // Helper function to apply filter text to a list of table rows\n        filter = filter.toLowerCase();\n        let matchedChildren = [];\n\n        for (let i = 0; i < children.length; i++) {\n            let data = children[i].props.data;\n\n            for (let filterColumn in this._filterable) {\n                if (typeof(data[filterColumn]) !== 'undefined') {\n                    // Default filter\n                    if (typeof(this._filterable[filterColumn]) === 'undefined' || this._filterable[filterColumn]=== 'default') {\n                        if (extractDataFrom(data, filterColumn).toString().toLowerCase().indexOf(filter) > -1) {\n                            matchedChildren.push(children[i]);\n                            break;\n                        }\n                    } else {\n                        // Apply custom filter\n                        if (this._filterable[filterColumn](extractDataFrom(data, filterColumn).toString(), filter)) {\n                            matchedChildren.push(children[i]);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return matchedChildren;\n    }\n\n    sortByCurrentSort() {\n        // Apply a sort function according to the current sort in the state.\n        // This allows us to perform a default sort even on a non sortable column.\n        let currentSort = this.state.currentSort;\n\n        if (currentSort.column === null) {\n            return;\n        }\n\n        this.data.sort(function(a, b){\n            let keyA = extractDataFrom(a, currentSort.column);\n            keyA = isUnsafe(keyA) ? keyA.toString() : keyA || '';\n            let keyB = extractDataFrom(b, currentSort.column);\n            keyB = isUnsafe(keyB) ? keyB.toString() : keyB || '';\n\n            // Default sort\n            if (\n                typeof(this._sortable[currentSort.column]) === 'undefined' ||\n                    this._sortable[currentSort.column] === 'default'\n            ) {\n\n                // Reverse direction if we're doing a reverse sort\n                if (keyA < keyB) {\n                    return -1 * currentSort.direction;\n                }\n\n                if (keyA > keyB) {\n                    return 1 * currentSort.direction;\n                }\n\n                return 0;\n            } else {\n                // Reverse columns if we're doing a reverse sort\n                if (currentSort.direction === 1) {\n                    return this._sortable[currentSort.column](keyA, keyB);\n                } else {\n                    return this._sortable[currentSort.column](keyB, keyA);\n                }\n            }\n        }.bind(this));\n    }\n\n    onSort(column) {\n        // Don't perform sort on unsortable columns\n        if (typeof(this._sortable[column]) === 'undefined') {\n            return;\n        }\n\n        let currentSort = this.state.currentSort;\n\n        if (currentSort.column === column) {\n            currentSort.direction *= -1;\n        } else {\n            currentSort.column = column;\n            currentSort.direction = this.props.defaultSortDescending ? -1 : 1;\n        }\n\n        // Set the current sort and pass it to the sort function\n        this.setState({ currentSort: currentSort });\n        this.sortByCurrentSort();\n\n        if (typeof(this.props.onSort) === 'function') {\n            this.props.onSort(currentSort);\n        }\n    }\n\n    render() {\n        let children = [];\n        let columns;\n        let userColumnsSpecified = false;\n        let showHeaders = typeof this.props.hideTableHeader === 'undefined';\n\n        let firstChild = null;\n\n\n        if (this.props.children) {\n            if (\n                this.props.children.length > 0 &&\n                this.props.children[0] &&\n                this.props.children[0].type === Thead\n            ) {\n                firstChild = this.props.children[0]\n            } else if (\n                this.props.children.type === Thead\n            ) {\n                firstChild = this.props.children\n            }\n        }\n\n        if (firstChild !== null) {\n            columns = Thead.getColumns(firstChild);\n        } else {\n            columns = this.props.columns || [];\n        }\n\n        if (columns.length > 0) {\n            userColumnsSpecified = true;\n            columns = this.translateColumnsArray(columns);\n        }\n\n        // Build up table rows\n        if (this.data && typeof this.data.map === 'function') {\n            // Build up the columns array\n            children = children.concat(this.data.map(function(rawData, i) {\n                let data = rawData;\n                let props = {};\n                if (rawData.__reactableMeta === true) {\n                    data = rawData.data;\n                    props = rawData.props;\n                }\n\n                // Loop through the keys in each data row and build a td for it\n                for (let k in data) {\n                    if (data.hasOwnProperty(k)) {\n                        // Update the columns array with the data's keys if columns were not\n                        // already specified\n                        if (userColumnsSpecified === false) {\n                            let column = {\n                                key:   k,\n                                label: k\n                            };\n\n                            // Only add a new column if it doesn't already exist in the columns array\n                            if (\n                                columns.find(function(element) {\n                                return element.key === column.key;\n                            }) === undefined\n                            ) {\n                                columns.push(column);\n                            }\n                        }\n                    }\n                }\n\n                return (\n                    <Tr columns={columns} key={i} data={data} {...props} />\n                );\n            }.bind(this)));\n        }\n\n        if (this.props.sortable === true) {\n            for (let i = 0; i < columns.length; i++) {\n                this._sortable[columns[i].key] = 'default';\n            }\n        }\n\n        // Determine if we render the filter box\n        let filtering = false;\n        if (\n            this.props.filterable &&\n                Array.isArray(this.props.filterable) &&\n                    this.props.filterable.length > 0 &&\n                        !this.props.hideFilterInput\n        ) {\n            filtering = true;\n        }\n\n        // Apply filters\n        let filteredChildren = children;\n        if (this.state.filter !== '') {\n            filteredChildren = this.applyFilter(this.state.filter, filteredChildren);\n        }\n\n        // Determine pagination properties and which columns to display\n        let itemsPerPage = 0;\n        let pagination = false;\n        let numPages;\n        let currentPage = this.state.currentPage;\n        let pageButtonLimit = this.props.pageButtonLimit || 10;\n\n        let currentChildren = filteredChildren;\n        if (this.props.itemsPerPage > 0) {\n            itemsPerPage = this.props.itemsPerPage;\n            numPages = Math.ceil(filteredChildren.length / itemsPerPage);\n\n            if (currentPage > numPages - 1) {\n                currentPage = numPages - 1;\n            }\n\n            pagination = true;\n            currentChildren = filteredChildren.slice(\n                currentPage * itemsPerPage,\n                (currentPage + 1) * itemsPerPage\n            );\n        }\n\n        // Manually transfer props\n        let props = filterPropsFrom(this.props);\n\n        let noDataText = this.props.noDataText ? <tr className=\"reactable-no-data\"><td colSpan={columns.length}>{this.props.noDataText}</td></tr> : null;\n\n        var tableHeader = null;\n        if (columns && columns.length > 0 && showHeaders) {\n            tableHeader = (\n                <Thead columns={columns}\n                       filtering={filtering}\n                       onFilter={filter => {\n                     this.setState({ filter: filter });\n                     if (this.props.onFilter) {\n                        this.props.onFilter(filter)\n                     }\n                 }}\n                       filterPlaceholder={this.props.filterPlaceholder}\n                       filterClassName={this.props.filterClassName}\n                       currentFilter={this.state.filter}\n                       sort={this.state.currentSort}\n                       sortableColumns={this._sortable}\n                       onSort={this.onSort.bind(this)}\n                       key=\"thead\"/>\n            )\n        }\n        return <table {...props}>\n            {tableHeader}\n            <tbody className=\"reactable-data\" key=\"tbody\">\n                {currentChildren.length > 0 ? currentChildren : noDataText}\n            </tbody>\n            {pagination === true ?\n             <Paginator colSpan={columns.length}\n                 pageButtonLimit={pageButtonLimit}\n                 numPages={numPages}\n                 currentPage={currentPage}\n                 onPageChange={page => {\n                     this.setState({ currentPage: page });\n                     if (this.props.onPageChange) {\n                        this.props.onPageChange(page)\n                     }\n                 }}\n                 previousPageLabel={this.props.previousPageLabel}\n                 nextPageLabel={this.props.nextPageLabel}\n                 key=\"paginator\"/>\n             : null}\n            {this.tfoot}\n        </table>;\n    }\n}\n\nTable.defaultProps = {\n    sortBy: false,\n    defaultSort: false,\n    defaultSortDescending: false,\n    itemsPerPage: 0,\n    filterBy: '',\n    hideFilterInput: false\n};\n"]}